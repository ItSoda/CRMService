version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql-crm
    restart: always
    environment:
      - MYSQL_DATABASE=CRMService_prod
    volumes:
      - mysql_data:/var/lib/mysql/

  redis: 
    image: redis:latest
    container_name: redis-crm
    restart: always
    env_file:
      - docker-compose.env
    ports:
      - "6379:6379"

  api:
    build: .
    image: django-api-crm
    command:
      - sh
      - -c
      - |
        dockerize -wait tcp://mysql:3306 -timeout 60s &&
        poetry run python manage.py collectstatic --noinput &&
        poetry run python manage.py migrate &&
        ngrok authtoken 2YAjzb799W5sMx82p3azikH2sP2_3KNzf4kzjVayk11njbvC8 &&
        ngrok http -hostname=boar-still-alpaca.ngrok-free.app 8000 &
        poetry run gunicorn CRMService.wsgi:application -b :8000 &&
        poetry run python manage.py startbot &&
        poetry run celery -A CRMService worker -l info -S solo
    environment:
      - DOCKER_CONTAINER=True
    env_file:
      - docker-compose.env
    ports:
      - "8000:8000" 
    depends_on:
      - mysql
      - redis 
    volumes:
      - .:/itsoda
      - static_volume:/itsoda/static
      - media_volume:/itsoda/media
    container_name: django-api-crm
  nginx:
    build: 
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: nginx_crm
    image: nginx_crm
    volumes:
      - static_volume:/itsoda/static
      - media_volume:/itsoda/media
    depends_on:
      - api
    ports:
      - "80:80"

volumes:
  mysql_data: null
  static_volume:
  media_volume:
